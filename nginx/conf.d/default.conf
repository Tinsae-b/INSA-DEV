# Upstream servers
upstream django_backend {
    server backend:8000;
    keepalive 32;
}

upstream nextjs_frontend {
    server frontend:3000;
    keepalive 32;
}

# HTTP - Redirect to HTTPS (uncomment in production with SSL)
# server {
#     listen 80;
#     server_name yourdomain.com www.yourdomain.com;
#     return 301 https://$server_name$request_uri;
# }

# Main server block
server {
    listen 80;
    # listen 443 ssl http2; # Uncomment for HTTPS
    server_name localhost; # Change to your domain in production

    # SSL Configuration (uncomment and configure for HTTPS)
    # ssl_certificate /etc/nginx/ssl/cert.pem;
    # ssl_certificate_key /etc/nginx/ssl/key.pem;
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers HIGH:!aNULL:!MD5;
    # ssl_prefer_server_ciphers on;
    # ssl_session_cache shared:SSL:10m;
    # ssl_session_timeout 10m;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always; # Uncomment for HTTPS

    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss;

    # Client body size limit
    client_max_body_size 10M;

    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Django API and Admin
    location /yearbook {
        limit_req zone=api burst=20 nodelay;
        limit_conn addr 10;

        proxy_pass http://django_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        
        # Disable buffering for streaming responses
        proxy_buffering off;
    }

    # Django Admin (change 'admin' to your ADMIN_URL in production)
    location /admin {
        limit_req zone=general burst=5 nodelay;
        limit_conn addr 5;

        proxy_pass http://django_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    # Static files (Django)
    location /static/ {
        alias /static/;
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Media files (Django)
    location /media/ {
        alias /media/;
        expires 7d;
        add_header Cache-Control "public";
        
        # Security: prevent execution of scripts in media directory
        location ~* \.(php|py|pl|sh|cgi)$ {
            deny all;
        }
    }

    # Next.js Frontend
    location / {
        limit_req zone=general burst=10 nodelay;
        limit_conn addr 10;

        proxy_pass http://nextjs_frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }

    # Next.js static files
    location /_next/static/ {
        proxy_pass http://nextjs_frontend;
        expires 365d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny access to common vulnerability paths
    location ~* (\.git|\.env|\.htaccess|\.sql|\.zip|\.tar\.gz) {
        deny all;
        access_log off;
        log_not_found off;
    }
}


